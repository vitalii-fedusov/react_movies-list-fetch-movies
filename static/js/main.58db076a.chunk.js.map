{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","movie","pathToImage","imgUrl","className","src","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","FindMovie","handleClick","useState","query","setQuery","setMovie","isLoading","setIsLoading","hasError","setHasError","handleSubmit","event","preventDefault","fetch","then","res","json","catch","Response","Error","getMovie","movieData","Title","Plot","Poster","imdbID","finally","onSubmit","htmlFor","value","onChange","target","type","id","placeholder","classNames","onClick","disabled","App","setMovies","newMovie","find","prev","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.58db076a.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => {\n  let pathToImage = 'images/imdb-logo.jpeg';\n\n  if (!movie.imgUrl) {\n    pathToImage = 'https://via.placeholder.com/360x270.png?text=no%20preview';\n  }\n  // console.log(pathToImage);\n\n  return (\n    <div className=\"card\" data-cy=\"movieCard\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            data-cy=\"moviePoster\"\n            src={movie.imgUrl}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src={pathToImage}\n                // src=\"images/imdb-logo.jpeg\"\n                // src={'images/imdb-logo.jpeg' || 'images/imdb-logo.jpeg'}\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\" data-cy=\"movieDescription\">\n          {movie.description}\n          <br />\n          <a href={movie.imdbUrl} data-cy=\"movieURL\">\n            IMDB\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\nimport classNames from 'classnames';\nimport { Movie } from '../../types/Movie';\nimport { getMovie } from '../../api';\nimport { MovieCard } from '../MovieCard';\nimport { MovieData } from '../../types/MovieData';\nimport { ResponseError } from '../../types/ReponseError';\n\ntype Props = {\n  handleClick: (movie: Movie | null) => void,\n};\n\nexport const FindMovie: React.FC<Props> = ({\n  handleClick = () => { },\n}) => {\n  const [query, setQuery] = useState('');\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [hasError, setHasError] = useState(false);\n\n  const handleQueryChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value);\n    setHasError(false);\n  };\n\n  // console.log(getMovie('a')\n  //   .then((movieData) => {\n  //     movieData.()\n  //   })\n  //   .then((text) => {\n  //     console.log(text);\n  //   });\n  //   );\n\n  const handleAdd = () => {\n    handleClick(movie);\n    setMovie(null);\n    setQuery('');\n  };\n\n  const handleSubmit = (\n    event:\n    React.FormEvent<HTMLFormElement>\n    | React.MouseEvent<HTMLButtonElement>,\n  ) => {\n    event.preventDefault();\n\n    setIsLoading(true);\n    getMovie(query)\n      .then(movieData => {\n        const { Response } = movieData as ResponseError;\n\n        if (Response === 'False') {\n          setHasError(true);\n        } else {\n          const {\n            Title,\n            Plot,\n            Poster,\n            imdbID,\n          } = movieData as MovieData;\n\n          setMovie({\n            title: Title,\n            description: Plot,\n            imgUrl: Poster,\n            imdbUrl: imdbID,\n            imdbId: imdbID,\n          });\n        }\n      })\n      .finally(() => setIsLoading(false));\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={(event) => handleSubmit(event)}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              value={query}\n              onChange={handleQueryChange}\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classNames('input', {\n                'is-danger': hasError,\n              })}\n            />\n          </div>\n\n          {hasError && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          {query ? (\n            <div className=\"control\">\n              <button\n                onClick={handleSubmit}\n                data-cy=\"searchButton\"\n                type=\"submit\"\n                className={classNames('button is-light', {\n                  'is-loading': isLoading,\n                })}\n              >\n                Find a movie\n              </button>\n            </div>\n          ) : (\n            <div className=\"control\">\n              <button\n                disabled\n                type=\"submit\"\n                data-cy=\"searchButton\"\n                className=\"button is-light\"\n              >\n                Find a movie\n              </button>\n            </div>\n          )}\n\n          <div className=\"control\">\n            {movie && (\n              <button\n                onClick={handleAdd}\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n              >\n                Add to the list\n              </button>\n            )}\n          </div>\n        </div>\n      </form>\n\n      {movie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=bb34f09c';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const handleClick = (newMovie: Movie | null) => {\n    if (newMovie && !movies.find(movie => movie.imdbId === newMovie.imdbId)) {\n      setMovies(prev => [...prev, newMovie]);\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie\n          handleClick={handleClick}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}