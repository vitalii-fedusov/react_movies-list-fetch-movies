{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","FindMovie","handleClick","useState","query","setQuery","setMovie","isLoading","setIsLoading","handleSubmit","fetch","then","res","json","catch","Response","Error","getMovie","movieData","Title","Plot","Poster","imdbID","finally","onSubmit","htmlFor","value","onChange","event","target","type","id","placeholder","onClick","classNames","disabled","App","setMovies","newMovie","prev","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e0a30e53.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\nimport classNames from 'classnames';\nimport { Movie } from '../../types/Movie';\nimport { getMovie } from '../../api';\nimport { MovieCard } from '../MovieCard';\nimport { MovieData } from '../../types/MovieData';\n\ntype Props = {\n  handleClick: (movie: Movie | null) => void,\n};\n\nexport const FindMovie: React.FC<Props> = ({\n  handleClick = () => { },\n}) => {\n  const [query, setQuery] = useState('');\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const handleQueryChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value);\n  };\n\n  const handleSubmit = () => {\n    setIsLoading(true);\n    getMovie(query).then(movieData => {\n      const {\n        Title,\n        Plot,\n        Poster,\n        imdbID,\n      } = movieData as MovieData;\n\n      setMovie({\n        title: Title,\n        description: Plot,\n        imgUrl: Poster,\n        imdbUrl: imdbID,\n        imdbId: imdbID,\n      });\n    }).finally(() => setIsLoading(false));\n    // console.log(movie);\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              value={query}\n              onChange={handleQueryChange}\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-danger\"\n            />\n          </div>\n\n          <p className=\"help is-danger\" data-cy=\"errorMessage\">\n            Can&apos;t find a movie with such a title\n          </p>\n        </div>\n\n        <div className=\"field is-grouped\">\n          {query ? (\n            <div className=\"control\">\n              <button\n                onClick={handleSubmit}\n                data-cy=\"searchButton\"\n                type=\"submit\"\n                className={classNames('button is-light', {\n                  'is-loading': isLoading,\n                })}\n              >\n                Find a movie\n              </button>\n            </div>\n          ) : (\n            <div className=\"control\">\n              <button\n                disabled\n                type=\"submit\"\n                data-cy=\"searchButton\"\n                className=\"button is-light\"\n              >\n                Find a movie\n              </button>\n            </div>\n          )}\n\n          <div className=\"control\">\n            {movie && (\n              <button\n                onClick={() => handleClick(movie)}\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n              >\n                Add to the list\n              </button>\n            )}\n          </div>\n        </div>\n      </form>\n\n      {movie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=bb34f09c';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n  // const [newMovie, setNewMovie] = useState<Movie | null>(null);\n\n  const handleClick = (newMovie: Movie | null) => {\n    if (newMovie) {\n      setMovies(prev => [...prev, newMovie]);\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie\n          handleClick={handleClick}\n          // handleSearch={setNewMovie}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}